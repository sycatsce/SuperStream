<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Film;
use AppBundle\Entity\Serie;
use AppBundle\Entity\User;
use AppBundle\Form\AddFilmType;
use AppBundle\Manager\FilmManager;
use AppBundle\Manager\CategoryManager;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\DomCrawler\Field\TextareaFormField;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\HttpFoundation\BinaryFileResponse;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;



class FilmsController extends Controller
{

    /**
     * @Route("/films", name="films")
     */
    public function filmsAction(Request $request, FilmManager $filmManager, CategoryManager $categoryManager)
    {
        $films = $filmManager->getFilms();
        $categories = $categoryManager->getCategories();
        return $this->render('films/films.html.twig', [
            'films' => $films,
            'categories' => $categories]);
    }

    /**
     * @Route("/films/film/{id}", name="film")
     * @Method("GET")
     */
    public function filmAction(Request $request, $id, FilmManager $filmManager)
    {
        $film = $filmManager->getFilm($id);
        return $this->render('films/film.html.twig', [
            'id' => $id,
            'film' => $film
        ]);

    }

    /**
     * @Route("/films/film/{id}/filmsViews", name="imagesViews")
     *
     */
    public function imagesViewAction(Request $request, $id)
    {
        $em = $this->getDoctrine()->getManager();
        $film = $em->getRepository(Film:: class)
            ->find($id);
        $findPath = $this->getParameter('picturesMovies_directory') . $film->getImage();
        return new BinaryFileResponse($findPath);
    }

    /**
     * @Route("admin/films/add", name="addFilm")
     */
    public function addFilmsAction(Request $request)
    {
        $film = new Film();

        $form = $this->createForm(AddFilmType:: class, $film);

        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            /** @var UploadedFile $file */
            $file = $film->getImage();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('picturesMovies_directory'),
                $fileName
            );

            $film->setImage($fileName);


//video

            /** @var UploadedFile $video */
            $video = $film->getVideo();
            $videoName = $this->generateUniqueFileName().'.'.$video->guessExtension();

            $video->move(
                $this->getParameter('videosMovies_directory'),
                $videoName
            );

            $film->setVideo('testy');





            $film = $form->getData();
            $em = $this->getDoctrine()->getManager();
            $em->persist($film);
            $em->flush();
            return $this->redirectToRoute('homepage');
        }

        return $this->render('films/addFilms.html.twig', [
            'form' => $form->createView()
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
