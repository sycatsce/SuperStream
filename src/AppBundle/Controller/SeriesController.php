<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Film;
use AppBundle\Entity\Serie;
use AppBundle\Entity\User;
use AppBundle\Form\AddFilmType;
use AppBundle\Form\AddSerieType;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\DomCrawler\Field\TextareaFormField;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\HttpFoundation\BinaryFileResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;



class SeriesController extends Controller
{
    /**
     * @Route("/", name="homepage")
     */
    public function indexAction(Request $request)
    {
        // replace this example code with whatever you need
        return $this->render('default/index.html.twig', [
            'base_dir' => realpath($this->getParameter('kernel.project_dir')).DIRECTORY_SEPARATOR,
        ]);
    }

    /**
     * @Route("/series", name="series")
     */
    public function seriesAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $series = $em->getRepository(Serie:: class)
            ->findAll();
        return $this->render('series/series.html.twig', [
            'series' => $series ]);
    }

    /**
     * @Route("/series/serie/{id}", name="serie")
     * @Method("GET")
     */
    public function serieAction(Request $request, $id)
    {
        $em = $this->getDoctrine()->getManager();
        $serie = $em->getRepository(Serie:: class)
            ->find($id);

        return $this->render('series/serie.html.twig', [
            'id' => $id,
            'serie' => $serie
        ]);

    }

    /**
     * @Route("/series/serie/{id}/seriesViews", name="imagesViewsSeries")
     *
     */
    public function imagesViewSerieAction(Request $request, $id)
    {
        $em = $this->getDoctrine()->getManager();
        $serie = $em->getRepository(Serie:: class)
            ->find($id);
        $findPath = $this->getParameter('picturesSeries_directory') . $serie->getImage();
        return new BinaryFileResponse($findPath);
    }

    /**
     * @Route("/series/add", name="addSerie")
     */
    public function addSeriesAction(Request $request)
    {
        $serie = new Serie();

        $form = $this->createForm(AddSerieType:: class, $serie);

        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $file = $serie->getImage();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('picturesSeries_directory'),
                $fileName
            );

            $serie->setImage($fileName);

            $serie = $form->getData();
            $em = $this->getDoctrine()->getManager();
            $em->persist($serie);
            $em->flush();
            return $this->redirectToRoute('homepage');
        }

        return $this->render('series/addSeries.html.twig', [
            'form' => $form->createView()
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


}
